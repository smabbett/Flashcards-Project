{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Repos/Project-Flashcards/src/Card/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { updateCard, readCard, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditCard() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(undefined);\n  const [currentDeck, setCurrentDeck] = useState([]);\n  console.log(currentDeck);\n  useEffect(() => {\n    readCard(cardId).then(setFormData);\n    readDeck(deckId).then(setCurrentDeck);\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    const value = target.value;\n    setFormData({ ...formData,\n      [target.name]: value\n    });\n    console.log(formData);\n  };\n\n  const handleReset = event => {\n    readCard(cardId).then(setFormData);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    updateCard(formData, abortController.signal).then().catch(setError);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  if (formData && currentDeck) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: currentDeck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\"Edit Card \", `${cardId}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"front\",\n          className: \"form-label\",\n          children: \"Front Side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"textarea\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: formData.front,\n          onChange: handleChange,\n          value: formData.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back\",\n          className: \"form-label\",\n          children: \"Back Side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"textarea\",\n          className: \"form-control\",\n          id: \"back\",\n          name: \"back\",\n          placeholder: formData.back,\n          onChange: handleChange,\n          value: formData.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-secondary\",\n        type: \"reset\",\n        onClick: handleReset,\n        value: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditCard, \"JSD25dluuEUg0htMCc9om8jOxPg=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project-Flashcards/src/Card/EditCard.js"],"names":["React","useEffect","useState","useParams","Link","updateCard","readCard","readDeck","ErrorMessage","EditCard","deckId","cardId","formData","setFormData","error","setError","undefined","currentDeck","setCurrentDeck","console","log","then","handleChange","target","value","name","handleReset","event","handleSubmit","preventDefault","abortController","AbortController","signal","catch","front","back"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { updateCard, readCard, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\n\nfunction EditCard() {\n  const { deckId, cardId } = useParams();\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(undefined);\n  const [currentDeck, setCurrentDeck] = useState([]);\n\n  console.log(currentDeck);\n  useEffect(() => {\n    readCard(cardId).then(setFormData);\n    readDeck(deckId).then(setCurrentDeck);\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n    console.log(formData);\n  };\n\n  const handleReset = (event) => {\n    readCard(cardId).then(setFormData);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const abortController = new AbortController();\n\n    updateCard(formData, abortController.signal).then().catch(setError);\n\n    if (error) {\n      return <ErrorMessage error={error} />;\n    }\n  };\n\n  if (formData && currentDeck)\n    return (\n      <>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"/\">Home</a>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>{currentDeck.name}</Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Edit Card {`${cardId}`}\n            </li>\n          </ol>\n        </nav>\n        <h1>Edit Card</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"front\" className=\"form-label\">\n              Front Side\n            </label>\n            <textarea\n              type=\"textarea\"\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              placeholder={formData.front}\n              onChange={handleChange}\n              value={formData.front}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"back\" className=\"form-label\">\n              Back Side\n            </label>\n            <textarea\n              type=\"textarea\"\n              className=\"form-control\"\n              id=\"back\"\n              name=\"back\"\n              placeholder={formData.back}\n              onChange={handleChange}\n              value={formData.back}\n            />\n          </div>\n          <input\n            className=\"btn btn-secondary\"\n            type=\"reset\"\n            onClick={handleReset}\n            value=\"Reset\"\n          ></input>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </>\n    );\n}\n\nexport default EditCard;\n"]},"metadata":{},"sourceType":"module"}