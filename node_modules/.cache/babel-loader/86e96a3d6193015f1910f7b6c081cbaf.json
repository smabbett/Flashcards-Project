{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js\",\n    _s = $RefreshSig$();\n\nimport { deleteDeck } from '../utils/api';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = ({\n  decks\n}) => {\n  _s();\n\n  const history = useHistory(); // const handleDelete = async () => {\n  //   const result = window.confirm(\n  //     'Delete this deck? \\nYou will not be able to recover it.'\n  //   );\n  //   if (result) {\n  //     deleteDeck(deck.id).then(history.push('/'));\n  //   }\n  // };\n\n  const list = decks.map(deck => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            className: \"btn btn-secondary\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            className: \"btn btn-primary\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${deck.cards.length} cards`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: async () => {\n              const result = window.confirm('Delete this deck? \\nYou will not be able to recover it.');\n\n              if (result) {\n                deleteDeck(deck.id).then(history.push('/'));\n              }\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, deck.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"decks/new\",\n      className: \"btn btn-secondary\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js"],"names":["deleteDeck","Link","useHistory","List","decks","history","list","map","deck","name","description","id","cards","length","result","window","confirm","then","push"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACjC,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAC/B,wBACE;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA4BA,IAAI,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BD,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASF,IAAI,CAACG,EAAG,EAA5B;AAA+B,YAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASH,IAAI,CAACG,EAAG,QAA5B;AAAqC,YAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAA,sBAAK,GAAEH,IAAI,CAACI,KAAL,CAAWC,MAAO;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAVF,eAYE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAE,YAAY;AACnB,oBAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CACb,yDADa,CAAf;;AAGA,kBAAIF,MAAJ,EAAY;AACVd,gBAAAA,UAAU,CAACQ,IAAI,CAACG,EAAN,CAAV,CAAoBM,IAApB,CAAyBZ,OAAO,CAACa,IAAR,CAAa,GAAb,CAAzB;AACD;AACF,aATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,OAAUV,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD,GAjCY,CAAb;AAmCA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA,gBAA0BL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtDM;;GAAMH,I;UACKD,U;;;KADLC,I;AAuDb,eAAeA,IAAf","sourcesContent":["import { deleteDeck } from '../utils/api';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport const List = ({ decks }) => {\n  const history = useHistory();\n  // const handleDelete = async () => {\n  //   const result = window.confirm(\n  //     'Delete this deck? \\nYou will not be able to recover it.'\n  //   );\n  //   if (result) {\n  //     deleteDeck(deck.id).then(history.push('/'));\n  //   }\n  // };\n\n  const list = decks.map((deck) => {\n    return (\n      <div key={deck.id} className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{deck.name}</h5>\n            <p className=\"card-text\">{deck.description}</p>\n\n            <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\n              View\n            </Link>\n            <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n              Study\n            </Link>\n            <p>{`${deck.cards.length} cards`}</p>\n            {/* why does this work here but not on Study.js */}\n            <button\n              className=\"btn btn-danger\"\n              onClick={async () => {\n                const result = window.confirm(\n                  'Delete this deck? \\nYou will not be able to recover it.'\n                );\n                if (result) {\n                  deleteDeck(deck.id).then(history.push('/'));\n                }\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <main className=\"container\">\n      <Link to=\"decks/new\" className=\"btn btn-secondary\">\n        Create Deck\n      </Link>\n      <section className=\"row\">{list}</section>\n    </main>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}