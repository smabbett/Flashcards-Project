{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Deck from '../Deck/Deck.js';\nimport { listDecks } from '../utils/api';\nimport ErrorMessage from './ErrorMessage';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined); //dependecy decks so that delete will render list again\n\n  function removeDeck(id) {\n    setDecks(decks.filter(deck => deck.id !== id));\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  const list = decks.map(deck =>\n  /*#__PURE__*/\n  // <Deck key={deck.id} deck={deck} removeDeck={removeDeck} />\n  _jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: deck.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}`,\n        className: \"btn btn-secondary\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/edit`,\n        className: \"btn btn-secondary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/study`,\n        className: \"btn btn-primary\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        className: \"btn btn-secondary\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${deck.cards.length} cards`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"decks/new\",\n      className: \"btn btn-secondary\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"/YFrYNhE77TDN83PvDm3YEcq3ZE=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js"],"names":["React","useState","useEffect","Deck","listDecks","ErrorMessage","Link","List","decks","setDecks","error","setError","undefined","removeDeck","id","filter","deck","abortController","AbortController","signal","then","catch","abort","list","map","name","description","cards","length","handleDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Deck from '../Deck/Deck.js';\nimport { listDecks } from '../utils/api';\n\nimport ErrorMessage from './ErrorMessage';\n\nimport { Link } from 'react-router-dom';\n\nexport const List = () => {\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n  //dependecy decks so that delete will render list again\n  function removeDeck(id) {\n    setDecks(decks.filter((deck) => deck.id !== id));\n  }\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n  const list = decks.map((deck) => (\n    // <Deck key={deck.id} deck={deck} removeDeck={removeDeck} />\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p className=\"card-text\">{deck.description}</p>\n\n        <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\n          View\n        </Link>\n        <Link to={`/decks/${deck.id}/edit`} className=\"btn btn-secondary\">\n          Edit\n        </Link>\n        <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n          Study\n        </Link>\n        <Link to={`/decks/${deck.id}/cards/new`} className=\"btn btn-secondary\">\n          Add Cards\n        </Link>\n        <p>{`${deck.cards.length} cards`}</p>\n        <button className=\"btn btn-danger\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n      <div>\n        <section className=\"row\">{list}</section>\n      </div>\n    </div>\n  ));\n  return (\n    <main className=\"container\">\n      <Link to=\"decks/new\" className=\"btn btn-secondary\">\n        Create Deck\n      </Link>\n      <section className=\"row\">{list}</section>\n    </main>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}