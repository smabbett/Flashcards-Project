{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { listDecks } from '../utils/api';\nimport ErrorMessage from './ErrorMessage';\nimport { deleteDeck } from '../utils/api';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  } // const handleDelete = async (id) => {\n  //   const result = window.confirm(\n  //     'Delete this deck? \\nYou will not be able to recover it.'\n  //   );\n  //   if (result) {\n  //     deleteDeck(id).then((response) => {\n  //       removeDeck(id);\n  //     });\n  //   }\n  // };\n  // function removeDeck(id) {\n  //   setDecks(decks.filter((deck) => deck.id !== id));\n  // }\n\n\n  const list = decks.map(deck => {\n    return (\n      /*#__PURE__*/\n      // <Deck key={deck.id} deck={deck} removeDeck={removeDeck} />\n      _jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            className: \"btn btn-secondary\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/edit`,\n            className: \"btn btn-secondary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            className: \"btn btn-primary\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/cards/new`,\n            className: \"btn btn-secondary\",\n            children: \"Add Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${deck.cards.length} cards`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    );\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"decks/new\",\n      className: \"btn btn-secondary\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"/YFrYNhE77TDN83PvDm3YEcq3ZE=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Layout/List.js"],"names":["React","useState","useEffect","listDecks","ErrorMessage","deleteDeck","Link","List","decks","setDecks","error","setError","undefined","abortController","AbortController","signal","then","catch","abort","list","map","deck","name","description","id","cards","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { listDecks } from '../utils/api';\nimport ErrorMessage from './ErrorMessage';\nimport { deleteDeck } from '../utils/api';\nimport { Link } from 'react-router-dom';\n\nexport const List = () => {\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  // const handleDelete = async (id) => {\n  //   const result = window.confirm(\n  //     'Delete this deck? \\nYou will not be able to recover it.'\n  //   );\n\n  //   if (result) {\n  //     deleteDeck(id).then((response) => {\n  //       removeDeck(id);\n  //     });\n  //   }\n  // };\n\n  // function removeDeck(id) {\n  //   setDecks(decks.filter((deck) => deck.id !== id));\n  // }\n\n  const list = decks.map((deck) => {\n    return (\n      // <Deck key={deck.id} deck={deck} removeDeck={removeDeck} />\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deck.name}</h5>\n          <p className=\"card-text\">{deck.description}</p>\n\n          <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\n            View\n          </Link>\n          <Link to={`/decks/${deck.id}/edit`} className=\"btn btn-secondary\">\n            Edit\n          </Link>\n          <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n            Study\n          </Link>\n          <Link\n            to={`/decks/${deck.id}/cards/new`}\n            className=\"btn btn-secondary\"\n          >\n            Add Cards\n          </Link>\n          <p>{`${deck.cards.length} cards`}</p>\n          <button className=\"btn btn-danger\">Delete</button>\n        </div>\n        {/* <div>\n        <section className=\"row\">{list}</section>\n      </div> */}\n      </div>\n    );\n  });\n\n  return (\n    <main className=\"container\">\n      <Link to=\"decks/new\" className=\"btn btn-secondary\">\n        Create Deck\n      </Link>\n      <section className=\"row\">{list}</section>\n    </main>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}