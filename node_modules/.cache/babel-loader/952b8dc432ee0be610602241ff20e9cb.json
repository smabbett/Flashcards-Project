{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/CreateDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { createDeck, listDecks } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeck() {\n  _s();\n\n  const initialState = {\n    // id: 0,\n    name: '',\n    description: ''\n  };\n  const [formData, setFormData] = useState({ ...initialState\n  });\n  const [error, setError] = useState(undefined);\n\n  const handleChange = ({\n    target\n  }) => {\n    const value = target.value;\n    setFormData({ ...formData,\n      [target.name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setFormData(event.value);\n    const abortController = new AbortController();\n    createDeck(formData, abortController.signal).then(setFormData({ ...initialState\n    })).catch(setError);\n    const response = listDecks();\n    console.log(response); // return () => abortController.abort();\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        className: \"form-control\",\n        id: \"name\",\n        onChange: handleChange,\n        value: formData.description,\n        \"aria-describedby\": \"emailHelp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"form-label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"description\",\n        className: \"form-control\",\n        id: \"description\",\n        placeholder: \"Brief description of the deck\",\n        onChange: handleChange,\n        value: formData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeck, \"nlY+WFO/Vnj4aBi++d05b/SXC4A=\");\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/CreateDeck.js"],"names":["React","useState","useEffect","createDeck","listDecks","ErrorMessage","CreateDeck","initialState","name","description","formData","setFormData","error","setError","undefined","handleChange","target","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","then","catch","response","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,YAAY,GAAG;AACnB;AACAC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,WAAW,EAAE;AAHM,GAArB;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAE,GAAGM;AAAL,GAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACa,SAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACAN,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACM,MAAM,CAACR,IAAR,GAAeS;AAFL,KAAD,CAAX;AAID,GAND;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,WAAW,CAACQ,KAAK,CAACF,KAAP,CAAX;AAEA,UAAMI,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAEAnB,IAAAA,UAAU,CAACO,QAAD,EAAWW,eAAe,CAACE,MAA3B,CAAV,CACGC,IADH,CACQb,WAAW,CAAC,EAAE,GAAGJ;AAAL,KAAD,CADnB,EAEGkB,KAFH,CAESZ,QAFT;AAGA,UAAMa,QAAQ,GAAGtB,SAAS,EAA1B;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAV8B,CAW9B;;AAEA,QAAId,KAAJ,EAAW;AACT,0BAAO,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAhBD;;AAiBA,sBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BAyBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEH,YAJZ;AAKE,QAAA,KAAK,EAAEL,QAAQ,CAACD,WALlB;AAME,4BAAiB;AANnB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eAsCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,EAAE,EAAC,aAHL;AAIE,QAAA,WAAW,EAAC,+BAJd;AAKE,QAAA,QAAQ,EAAEM,YALZ;AAME,QAAA,KAAK,EAAEL,QAAQ,CAACD;AANlB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCF,eAoDE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GA5FQH,U;;KAAAA,U;AA8FT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createDeck, listDecks } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\n\nfunction CreateDeck() {\n  const initialState = {\n    // id: 0,\n    name: '',\n    description: '',\n  };\n\n  const [formData, setFormData] = useState({ ...initialState });\n  const [error, setError] = useState(undefined);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setFormData(event.value);\n\n    const abortController = new AbortController();\n\n    createDeck(formData, abortController.signal)\n      .then(setFormData({ ...initialState }))\n      .catch(setError);\n    const response = listDecks();\n    console.log(response);\n    // return () => abortController.abort();\n\n    if (error) {\n      return <ErrorMessage error={error} />;\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* <label htmlFor=\"name\">\n        Name:\n        <input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Deck Name\"\n          name=\"name\"\n          onChange={handleChange}\n          value={formData.name}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"description\">\n        Description:\n        <input\n          id=\"description\"\n          type=\"textarea\"\n          placeholder=\"Brief description of the deck\"\n          name=\"description\"\n          onChange={handleChange}\n          value={formData.description}\n        />\n      </label> */}\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          type=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          onChange={handleChange}\n          value={formData.description}\n          aria-describedby=\"emailHelp\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n        </label>\n        <input\n          type=\"description\"\n          className=\"form-control\"\n          id=\"description\"\n          placeholder=\"Brief description of the deck\"\n          onChange={handleChange}\n          value={formData.description}\n        />\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default CreateDeck;\n"]},"metadata":{},"sourceType":"module"}