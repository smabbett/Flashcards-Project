{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updateDeck, listDecks, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const deck = readDeck(deckId);\n  const [formData, setFormData] = useState({ ...deck\n  });\n  const [error, setError] = useState(undefined);\n\n  const handleChange = ({\n    target\n  }) => {\n    const value = target.value;\n    setFormData({ ...formData,\n      [target.name]: value\n    });\n    console.log(formData);\n  };\n\n  const handleReset = event => {\n    setFormData(deck);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    console.log(formData);\n    updateDeck(formData, abortController.signal).then(console.log(listDecks())).catch(setError); // return () => abortController.abort();\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n\n    console.log(listDecks());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        class: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: deck.name,\n          onChange: handleChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          className: \"form-control\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: deck.description,\n          onChange: handleChange,\n          value: formData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn btn-secondary\",\n        type: \"reset\",\n        onClick: handleReset,\n        value: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditDeck, \"KruVN9AXszJFIdnQrBV2UV4+prw=\", false, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/EditDeck.js"],"names":["React","useState","useParams","updateDeck","listDecks","readDeck","ErrorMessage","EditDeck","deckId","deck","formData","setFormData","error","setError","undefined","handleChange","target","value","name","console","log","handleReset","event","handleSubmit","preventDefault","abortController","AbortController","signal","then","catch","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,cAAhD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAMO,IAAI,GAAGJ,QAAQ,CAACG,MAAD,CAArB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAE,GAAGQ;AAAL,GAAD,CAAxC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACa,SAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEAN,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACM,MAAM,CAACE,IAAR,GAAeD;AAFL,KAAD,CAAX;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,GARD;;AAUA,QAAMW,WAAW,GAAIC,KAAD,IAAW;AAC7BX,IAAAA,WAAW,CAACF,IAAD,CAAX;AACD,GAFD;;AAGA,QAAMc,YAAY,GAAID,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACE,cAAN;AAEA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAP,IAAAA,UAAU,CAACO,QAAD,EAAWe,eAAe,CAACE,MAA3B,CAAV,CACGC,IADH,CACQT,OAAO,CAACC,GAAR,CAAYhB,SAAS,EAArB,CADR,EAEGyB,KAFH,CAEShB,QAFT,EAL8B,CAS9B;;AAEA,QAAID,KAAJ,EAAW;AACT,0BAAO,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAS,EAArB;AACD,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,iBAAV;AAAA,iCACE;AAAG,YAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,KAAK,EAAC,wBAAV;AAAmC,0BAAa,MAAhD;AAAA,oBACGK,IAAI,CAACS;AADR;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAI,UAAA,KAAK,EAAC,wBAAV;AAAmC,0BAAa,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,WAAW,EAAEd,IAAI,CAACS,IALpB;AAME,UAAA,QAAQ,EAAEH,YANZ;AAOE,UAAA,KAAK,EAAEL,QAAQ,CAACQ;AAPlB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAA6B,UAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,IAAI,EAAC,aAJP;AAKE,UAAA,WAAW,EAAET,IAAI,CAACqB,WALpB;AAME,UAAA,QAAQ,EAAEf,YANZ;AAOE,UAAA,KAAK,EAAEL,QAAQ,CAACoB;AAPlB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA6BE;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAET,WAHX;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cA7BF,eAmCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAyDD;;GA7FQd,Q;UACYL,S;;;KADZK,Q;AA+FT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updateDeck, listDecks, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\n\nfunction EditDeck() {\n  const { deckId } = useParams();\n  const deck = readDeck(deckId);\n  const [formData, setFormData] = useState({ ...deck });\n  const [error, setError] = useState(undefined);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n    console.log(formData);\n  };\n\n  const handleReset = (event) => {\n    setFormData(deck);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const abortController = new AbortController();\n    console.log(formData);\n    updateDeck(formData, abortController.signal)\n      .then(console.log(listDecks()))\n      .catch(setError);\n\n    // return () => abortController.abort();\n\n    if (error) {\n      return <ErrorMessage error={error} />;\n    }\n    console.log(listDecks());\n  };\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            {deck.name}\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h1>Edit Deck</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            name=\"name\"\n            placeholder={deck.name}\n            onChange={handleChange}\n            value={formData.name}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"description\" className=\"form-label\">\n            Description\n          </label>\n          <input\n            type=\"textarea\"\n            className=\"form-control\"\n            id=\"description\"\n            name=\"description\"\n            placeholder={deck.description}\n            onChange={handleChange}\n            value={formData.description}\n          />\n        </div>\n        <input\n          class=\"btn btn-secondary\"\n          type=\"reset\"\n          onClick={handleReset}\n          value=\"Reset\"\n        ></input>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}