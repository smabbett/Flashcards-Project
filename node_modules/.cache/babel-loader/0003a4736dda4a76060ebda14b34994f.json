{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Card/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createCard, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\nimport { useParams } from 'react-router-dom';\nimport CardForm from './CardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const initialState = {\n    front: '',\n    back: ''\n  };\n  const {\n    deckId\n  } = useParams();\n  const [formData, setFormData] = useState({ ...initialState\n  });\n  const [error, setError] = useState(undefined);\n  const [currentDeck, setCurrentDeck] = useState([]);\n  useEffect(() => {\n    readDeck(deckId).then(setCurrentDeck);\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    const value = target.value;\n    setFormData({ ...formData,\n      [target.name]: value\n    });\n    console.log('formData', formData);\n  };\n\n  const handleReset = event => {\n    setFormData({ ...initialState\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createCard(deckId, formData, abortController.signal).then(handleReset()).catch(setError);\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    }\n\n    return () => abortController.abort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardForm, {\n      formData: formData,\n      currentDeck: currentDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddCard, \"EcEZFUsJghRUMIjGOWuXdtgnXt4=\", false, function () {\n  return [useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Card/AddCard.js"],"names":["React","useEffect","useState","createCard","readDeck","ErrorMessage","useParams","CardForm","AddCard","initialState","front","back","deckId","formData","setFormData","error","setError","undefined","currentDeck","setCurrentDeck","then","handleChange","target","value","name","console","log","handleReset","event","handleSubmit","preventDefault","abortController","AbortController","signal","catch","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE;AAFa,GAArB;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAE,GAAGO;AAAL,GAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACe,SAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACQ,MAAD,CAAR,CAAiBQ,IAAjB,CAAsBD,cAAtB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEAT,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACS,MAAM,CAACE,IAAR,GAAeD;AAFL,KAAD,CAAX;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,QAAxB;AACD,GARD;;AAUA,QAAMc,WAAW,GAAIC,KAAD,IAAW;AAC7Bd,IAAAA,WAAW,CAAC,EAAE,GAAGL;AAAL,KAAD,CAAX;AACD,GAFD;;AAGA,QAAMoB,YAAY,GAAID,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACE,cAAN;AAEA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAEA7B,IAAAA,UAAU,CAACS,MAAD,EAASC,QAAT,EAAmBkB,eAAe,CAACE,MAAnC,CAAV,CACGb,IADH,CACQO,WAAW,EADnB,EAEGO,KAFH,CAESlB,QAFT;;AAIA,QAAID,KAAJ,EAAW;AACT,0BAAO,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,WAAO,MAAMgB,eAAe,CAACI,KAAhB,EAAb;AACD,GAbD;;AAeA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEtB,QAApB;AAA8B,MAAA,WAAW,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0DD;;GApGQV,O;UAKYF,S;;;KALZE,O;AAsGT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createCard, readDeck } from '../utils/api';\nimport ErrorMessage from '../Layout/ErrorMessage';\nimport { useParams } from 'react-router-dom';\nimport CardForm from './CardForm';\n\nfunction AddCard() {\n  const initialState = {\n    front: '',\n    back: '',\n  };\n  const { deckId } = useParams();\n  const [formData, setFormData] = useState({ ...initialState });\n  const [error, setError] = useState(undefined);\n  const [currentDeck, setCurrentDeck] = useState([]);\n\n  useEffect(() => {\n    readDeck(deckId).then(setCurrentDeck);\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n    console.log('formData', formData);\n  };\n\n  const handleReset = (event) => {\n    setFormData({ ...initialState });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const abortController = new AbortController();\n\n    createCard(deckId, formData, abortController.signal)\n      .then(handleReset())\n      .catch(setError);\n\n    if (error) {\n      return <ErrorMessage error={error} />;\n    }\n    return () => abortController.abort();\n  };\n\n  return (\n    <>\n      <CardForm formData={formData} currentDeck={currentDeck} />\n      {/* <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Home</a>\n          </li>\n          <li className=\"breadcrumb-item\" aria-current=\"page\">\n            <a href={`/decks/${deckId}`}>{currentDeck.name}</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Add Card\n          </li>\n        </ol>\n      </nav>\n      <h1>{currentDeck.name}: Add Card</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"front\" className=\"form-label\">\n            Front Side\n          </label>\n          <textarea\n            type=\"textarea\"\n            className=\"form-control\"\n            id=\"front\"\n            name=\"front\"\n            placeholder=\"Front Side\"\n            onChange={handleChange}\n            value={formData.front}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"back\" className=\"form-label\">\n            Back Side\n          </label>\n          <textarea\n            type=\"textarea\"\n            className=\"form-control\"\n            id=\"back\"\n            name=\"back\"\n            placeholder=\"Back Side\"\n            onChange={handleChange}\n            value={formData.back}\n          />\n        </div>\n        <input\n          class=\"btn btn-secondary mr-3\"\n          type=\"reset\"\n          onClick={handleReset}\n          value=\"Reset\"\n        ></input>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form> */}\n    </>\n  );\n}\n\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}