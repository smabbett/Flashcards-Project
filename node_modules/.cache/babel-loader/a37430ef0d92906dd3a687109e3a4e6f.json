{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Deck/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { deleteDeck, readDeck } from '../utils/api';\nimport Card from '../Card/Card'; //import ErrorMessage from '../Layout/ErrorMessage';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Deck = ({\n  decks\n}) => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  console.log('decks', decks); // const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      const response = await readDeck(deckId, abortController.signal);\n      const deckFromAPI = await response.json();\n      setDeck(deckFromAPI);\n    }\n\n    loadDeck();\n    return () => abortController.abort();\n  }, []); // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n  //   return () => abortController.abort();\n  // }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  const deck = decks.find(deck => deck.id === Number(deckId));\n  const history = useHistory();\n  console.log('deck', deck);\n\n  const handleDelete = async id => {\n    const result = window.confirm('Delete this deck? \\nYou will not be able to recover it.');\n\n    if (result) {\n      await deleteDeck(id).then(() => history.push('/')); // ((response) => {\n      // removeDeck(id);\n      // });\n    }\n  }; // function removeDeck(id) {\n  //   setDecks(decks.filter((deck) => deck.id !== id));\n  // }\n\n\n  if (deck) {\n    console.log('deck cards', deck.cards);\n    const list = deck.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 43\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/edit`,\n          className: \"btn btn-secondary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/study`,\n          className: \"btn btn-primary\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/cards/new`,\n          className: \"btn btn-secondary\",\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"row\",\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No such deck\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Deck, \"5er2VCRf9KcNpfoaQwPoocBUIrg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project_Flashcards_Qualified_1/src/Deck/Deck.js"],"names":["React","Link","useParams","useHistory","deleteDeck","readDeck","Card","Deck","decks","deckId","console","log","useEffect","abortController","AbortController","loadDeck","response","signal","deckFromAPI","json","setDeck","abort","error","deck","find","id","Number","history","handleDelete","result","window","confirm","then","push","cards","list","map","card","name","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { deleteDeck, readDeck } from '../utils/api';\nimport Card from '../Card/Card';\n//import ErrorMessage from '../Layout/ErrorMessage';\n\nexport const Deck = ({ decks }) => {\n  const { deckId } = useParams();\n  console.log('decks', decks);\n  // const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      const response = await readDeck(deckId, abortController.signal);\n      const deckFromAPI = await response.json();\n      setDeck(deckFromAPI);\n    }\n    loadDeck();\n    return () => abortController.abort();\n  }, []);\n\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n\n  //   readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n\n  //   return () => abortController.abort();\n  // }, []);\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const deck = decks.find((deck) => deck.id === Number(deckId));\n  const history = useHistory();\n  console.log('deck', deck);\n  const handleDelete = async (id) => {\n    const result = window.confirm(\n      'Delete this deck? \\nYou will not be able to recover it.'\n    );\n\n    if (result) {\n      await deleteDeck(id).then(() => history.push('/'));\n\n      // ((response) => {\n      // removeDeck(id);\n      // });\n    }\n  };\n\n  // function removeDeck(id) {\n  //   setDecks(decks.filter((deck) => deck.id !== id));\n  // }\n  if (deck) {\n    console.log('deck cards', deck.cards);\n    const list = deck.cards.map((card) => <Card key={card.id} card={card} />);\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deck.name}</h5>\n          <p className=\"card-text\">{deck.description}</p>\n\n          <Link to={`/decks/${deck.id}/edit`} className=\"btn btn-secondary\">\n            Edit\n          </Link>\n          <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n            Study\n          </Link>\n          <Link\n            to={`/decks/${deck.id}/cards/new`}\n            className=\"btn btn-secondary\"\n          >\n            Add Cards\n          </Link>\n\n          <button className=\"btn btn-danger\" onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n        <div>\n          <section className=\"row\">{list}</section>\n        </div>\n      </div>\n    );\n  }\n  return <div>No such deck</div>;\n};\n\nexport default Deck;\n"]},"metadata":{},"sourceType":"module"}